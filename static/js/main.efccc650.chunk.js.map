{"version":3,"sources":["assets/images/pieces/line.svg","assets/images/pieces/curve.svg","assets/images/pieces/bridge.svg","assets/images/pieces/switch.svg","assets/images/pieces/padure.svg","assets/images/pieces/gara.svg","constants/pieces.js","constants/game.js","store/actions/game.js","store/types/game.js","utils/gameHelpers.js","store/actions/board.js","store/types/board.js","constants/assetsMap.js","components/SelectionWheel.jsx","components/Piece.jsx","views/Board.jsx","views/App.jsx","store/reducers/board.js","store/reducers/game.js","store/reducers/index.js","store/index.js","index.js"],"names":["module","exports","PIECE_TYPES","bridge","type","connections","allowRotate","curve","line","switch","station","forest","DIRECTIONS","GAME_STAGE","FOREST","moves","piece","STATIONS","TRACKS","setGameStage","stage","payload","setActivePlayer","player","playerEndTurn","dispatch","getState","game","players","activeTurn","activeIdx","findIndex","p","id","turns","nextPlayer","allowed","executed","enableAllPieces","playerMakeMove","showLegalMoves","fakeBoard","enabled","occupied","rotation","ownerId","isOnMap","posX","posY","gameMap","getLegalMoves","legalMoves","length","map","column","cell","console","log","filter","el","idx","getAdjacentDirections","disablePiece","x","y","board","parsedMoves","join","PIECES","linePiece","curvePiece","bridgePiece","switchPiece","forestPiece","stationPiece","SelectionWheel","internalType","internalRotate","hideWheel","setSelection","saveSelection","setRotation","className","Object","keys","includes","key","onClick","src","icon","faUndo","faTimes","actionTypes","reducer","state","action","isEnabled","selectionWheel","Piece","cornerPiece","setPiece","useReducer","useEffect","Math","abs","mapDispatchToProps","initBoard","config","rows","columns","defaultPiece","matrix","setBoard","Array","fill","_","initPlayers","playerCount","parseInt","i","name","setPlayers","activePlayer","currentStage","currentType","currentRotation","connectionsCopy","reverse","times","push","shift","unshift","pop","rotateConnections","legalMove","possibleConnections","reduce","acc","val","isLegalStationPlacement","adjacentSquares","padCount","j","getAdjacentSquares","square","savePiece","connect","style","width","row","isCornerPiece","flex","setRows","setColumns","pattern","value","onChange","e","target","initialState","count","reducers","combineReducers","assign","active","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.efccc650.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/line.2e3e852f.svg\";","module.exports = __webpack_public_path__ + \"static/media/curve.e4a33090.svg\";","module.exports = __webpack_public_path__ + \"static/media/bridge.2b4139f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/switch.90588404.svg\";","module.exports = __webpack_public_path__ + \"static/media/padure.7a9c9b0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/gara.830c43ab.svg\";","// NORTH, EAST, SOUTH, WEST - CONNECTIONS ARE CLOCKWISE\n\nexport const PIECE_TYPES = {\n  bridge: {\n    type: 'bridge',\n    connections: [1, 1, 1, 1],\n    allowRotate: true\n  },\n  curve: {\n    type: 'curve',\n    connections: [1, 1, 0, 0],\n    allowRotate: true\n  },\n  line: {\n    type: 'line',\n    connections: [0, 1, 0, 1],\n    allowRotate: true\n  },\n  switch: {\n    type: 'switch',\n    connections: [1, 1, 0, 1],\n    allowRotate: true\n  },\n  station: {\n    type: 'station',\n    connections: [1, 1, 0, 1],\n    allowRotate: true\n  },\n  forest: {\n    type: 'forest',\n    connections: [0, 0, 0, 0],\n    allowRotate: false\n  }\n};\n\nexport const DIRECTIONS = ['NORTH', 'EAST', 'SOUTH', 'WEST'];\n\n// export Object.freeze(PIECE_TYPES);\n\n// export PIECE_TYPES;\n","import { PIECE_TYPES } from 'constants/pieces';\n\nexport const GAME_STAGE = {\n  FOREST: {\n    type: 'FOREST',\n    moves: 3,\n    piece: [PIECE_TYPES.forest.type]\n  },\n  STATIONS: {\n    type: 'STATIONS',\n    moves: 2,\n    piece: [PIECE_TYPES.station.type]\n  },\n  TRACKS: {\n    type: 'TRACKS',\n    moves: 1,\n    piece: [\n      PIECE_TYPES.bridge.type,\n      PIECE_TYPES.curve.type,\n      PIECE_TYPES.line.type,\n      PIECE_TYPES.switch.type\n    ]\n  }\n};\n","import { GAME_STAGE } from 'constants/game';\nimport {\n  SET_TURN,\n  SET_PLAYER_COUNT,\n  SET_PLAYERS,\n  SET_ACTIVE_PLAYER,\n  SET_GAME_STAGE,\n  PLAYER_MOVE_ADD\n} from 'store/types/game';\n\nimport { enableAllPieces, showLegalMoves } from 'store/actions/board';\n\nexport const setGameStage = stage => ({ type: SET_GAME_STAGE, payload: stage });\nexport const setPlayerCount = playerCount => ({ type: SET_PLAYER_COUNT, payload: playerCount });\nexport const setPlayers = players => ({ type: SET_PLAYERS, payload: players });\nexport const setActivePlayer = player => ({ type: SET_ACTIVE_PLAYER, payload: player });\nexport const playerMoveAdd = () => ({ type: PLAYER_MOVE_ADD });\n\nexport const changeGameStage = () => (dispatch, getState) => {\n  const {\n    game: {\n      turns: { stage }\n    }\n  } = getState();\n  stage === GAME_STAGE.FOREST && dispatch(setGameStage(GAME_STAGE.STATIONS));\n  stage === GAME_STAGE.STATIONS && dispatch(setGameStage(GAME_STAGE.TRACKS));\n};\n\nexport const playerEndTurn = () => (dispatch, getState) => {\n  const {\n    game: {\n      players,\n      activeTurn: { player }\n    }\n  } = getState();\n\n  const activeIdx = players.findIndex(p => p.id === player.id);\n  if (!players[activeIdx + 1]) dispatch(changeGameStage());\n  const {\n    game: {\n      turns: {\n        stage: { moves }\n      }\n    }\n  } = getState();\n\n  const nextPlayer = {\n    player: players[activeIdx + 1] ? players[activeIdx + 1] : players[0],\n    moves: { allowed: moves, executed: 0 }\n  };\n  dispatch(enableAllPieces());\n  dispatch(setActivePlayer(nextPlayer));\n};\n\nexport const initPlayers = () => (dispatch, getState) => {\n  const {\n    game: { playerCount }\n  } = getState();\n\n  const players = [...Array(parseInt(playerCount))].map((_, i) => ({\n    id: i + 1,\n    name: `Player ${i + 1}`\n  }));\n\n  dispatch(setPlayers(players));\n  dispatch(setGameStage(GAME_STAGE.STATIONS));\n  const activePlayer = {\n    player: { ...players[0] },\n    moves: { allowed: GAME_STAGE.STATIONS.moves, executed: 0 }\n  };\n  dispatch(setActivePlayer(activePlayer));\n};\n\nexport const playerMakeMove = () => (dispatch, getState) => {\n  const {\n    game: {\n      activeTurn: {\n        moves: { allowed, executed }\n      }\n    }\n  } = getState();\n\n  dispatch(playerMoveAdd());\n  if (executed + 1 === allowed) dispatch(playerEndTurn());\n  dispatch(showLegalMoves());\n};\n\nexport const setTurn = () => ({ type: SET_TURN });\n","export const NEXT_TURN = 'NEXT_TURN';\nexport const INIT_PLAYERS = 'INIT_PLAYERS';\nexport const SET_PLAYER_COUNT = 'SET_PLAYER_COUNT';\nexport const SET_PLAYERS = 'SET_PLAYERS';\nexport const SET_TURN = 'SET_PLAYER_TURN';\nexport const SET_ACTIVE_PLAYER = 'SET_ACTIVE_PLAYER';\nexport const SET_GAME_STAGE = 'SET_GAME_STAGE';\nexport const PLAYER_MAKE_MOVE = 'PLAYER_MAKE_MOVE';\nexport const PLAYER_MOVE_ADD = 'PLAYER_MOVE_ADD';\nexport const PLAYER_END_TURN = 'PLAYER_END_TURN';","// export const isMatch = (pieceA, pieceB) => {};\nimport { DIRECTIONS } from 'constants/pieces';\n\nconst fakeBoard = [\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      connections: [1, 1, 0, 1],\n      enabled: true,\n      ownerId: 2,\n      type: 'station',\n      rotation: 0\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      connections: [0, 1, 1, 1],\n      enabled: true,\n      ownerId: 1,\n      type: 'station',\n      rotation: -180\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      connections: [1, 1, 0, 1],\n      enabled: true,\n      ownerId: 2,\n      type: 'station',\n      rotation: 0\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      connections: [1, 1, 0, 1],\n      enabled: true,\n      ownerId: 1,\n      type: 'station',\n      rotation: 0\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ],\n  [\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    },\n    {\n      enabled: true,\n      occupied: false,\n      type: '',\n      rotation: 0,\n      connections: [],\n      ownerId: null\n    }\n  ]\n];\n\nexport const rotateConnections = (connections, rotation) => {\n  console.log(`Rotate connections called with rotation: ${rotation} and connections:`, connections);\n  const connectionsCopy = [...connections];\n  const reverse = rotation < 0;\n  const times = Math.abs(rotation / 90);\n  for (let i = 0; i < times; i++) {\n    if (reverse) connectionsCopy.push(connectionsCopy.shift());\n    else connectionsCopy.unshift(connectionsCopy.pop());\n  }\n  return connectionsCopy;\n};\n\nexport const getAdjacentSquares = (posX, posY, rows, columns, padCount) => {\n  const adjacentSquares = [];\n  for (let i = posX - padCount; i <= posX + padCount; i++) {\n    for (let j = posY - padCount; j <= posY + padCount; j++) {\n      if (i >= 0 && i < rows && j >= 0 && j < columns) adjacentSquares.push([i, j]);\n    }\n  }\n  return adjacentSquares;\n};\n\nexport const isOnMap = (posX, posY, gameMap) => {\n  return typeof gameMap[posX] !== 'undefined' && typeof gameMap[posX][posY] !== 'undefined';\n};\n\n/**\n * Given a cell and a game map returns an array of legal paths from that cell to adjacent cells\n *\n * @param {number} posX X position of cell\n * @param {number} posY Y position of cell\n * @param {array} gameMap\n *\n * @returns {array} Returns array of legal directions\n */\nexport const getAdjacentDirections = (posX, posY, gameMap, connections = [1, 1, 1, 1]) => {\n  console.log(`getAdjacentDirections called with ${posX} ${posY} `);\n  if (!isOnMap(posX, posY, gameMap)) return null;\n  return [\n    [posX - 1, posY],\n    [posX, posY + 1],\n    [posX + 1, posY],\n    [posX, posY - 1]\n  ]\n    .filter((el, idx) => connections[idx] === 1)\n    .filter(el => isOnMap(...el, gameMap));\n};\n\nexport const isCellOccupied = ({ occupied }) => occupied !== false;\n\nexport const getLegalMoves = (gameMap, player) => {\n  // console.log(`getLegalMoves called with ${gameMap} ${player}`);\n  gameMap = gameMap || fakeBoard;\n  let legalMoves = [];\n  if (!gameMap.length || !player) return;\n  gameMap.map((column, posX) => {\n    column.map((cell, posY) => {\n      if (cell.ownerId === player) {\n        legalMoves = [\n          ...legalMoves,\n          ...getAdjacentDirections(posX, posY, gameMap, cell.connections)\n        ];\n      }\n    });\n  });\n\n  console.log(`Legal Moves for player ${player} are: `, legalMoves);\n  return legalMoves;\n};\n\nexport const isLegalStationPlacement = (posX, posY, rows, columns, connections) => {\n  console.log(connections);\n  let legalMove = true;\n  const possibleConnections = [\n    [posX - 1, posY],\n    [posX, posY + 1],\n    [posX + 1, posY],\n    [posX, posY - 1]\n  ].reduce((acc, val) => {\n    const [x, y] = val;\n    return [...acc, +(0 <= x && x < rows && 0 <= y && y < columns)];\n  }, []);\n\n  connections.map((val, idx) => {\n    if (val === 1 && possibleConnections[idx] !== 1) {\n      console.log(`ILLEGAL MOVE. ${DIRECTIONS[idx]} IS BLOCKED.`);\n      legalMove = false;\n    }\n  });\n\n  return legalMove;\n};\n","import {\n  SET_BOARD,\n  SET_ROWS,\n  SET_COLUMNS,\n  SET_PIECE,\n  SET_LEGAL_MOVES,\n  ENABLE_PIECE,\n  DISABLE_PIECE,\n  ENABLE_ALL_PIECES\n} from 'store/types/board';\nimport { playerMakeMove } from 'store/actions/game';\n\nimport { PIECE_TYPES } from 'constants/pieces';\nimport { GAME_STAGE } from 'constants/game';\n\nimport {\n  getAdjacentSquares,\n  getLegalMoves,\n  isLegalStationPlacement,\n  rotateConnections\n} from 'utils/gameHelpers';\n\nexport const setRows = rows => ({ type: SET_ROWS, payload: rows });\nexport const setColumns = columns => ({ type: SET_COLUMNS, payload: columns });\nexport const setBoard = matrix => ({ type: SET_BOARD, payload: matrix });\nexport const setLegalMoves = moves => ({ type: SET_LEGAL_MOVES, payload: { moves } });\nexport const savePiece = (x, y, piece) => ({ type: SET_PIECE, payload: { x, y, piece } });\nexport const enableAllPieces = () => ({ type: ENABLE_ALL_PIECES });\nexport const enablePiece = (x, y) => ({ type: ENABLE_PIECE, payload: { x, y } });\nexport const disablePiece = (x, y) => ({ type: DISABLE_PIECE, payload: { x, y } });\n\nexport const initBoard = () => (dispatch, getState) => {\n  const {\n    board: {\n      config: { rows, columns }\n    }\n  } = getState();\n\n  const defaultPiece = {\n    enabled: true,\n    occupied: false,\n    ownerId: null,\n    type: '',\n    rotation: 0,\n    connections: []\n  };\n\n  const matrix = Array(rows)\n    .fill(null)\n    .map((_, posX) =>\n      Array(columns)\n        .fill(null)\n        .map((_, posY) => ({ ...defaultPiece, posX, posY }))\n    );\n\n  // const matrix = new Array(rows)\n  //   .fill(0)\n  //   .map((, posX) => new Array(columns).fill({ ...defaultPiece, posX: rows, posY: columns }));\n  dispatch(setBoard(matrix));\n};\n\nexport const setPiece = (posX, posY, type, rotation) => (dispatch, getState) => {\n  const {\n    game: {\n      activeTurn: {\n        player: { id }\n      },\n      turns: {\n        stage: { type: currentStage }\n      }\n    },\n    board: {\n      config: { rows, columns },\n      gameMap: {\n        [posX]: {\n          [posY]: { type: currentType, rotation: currentRotation }\n        }\n      }\n    }\n  } = getState();\n\n  if (type === currentType && rotation === currentRotation) {\n    console.log(`No change registered. Not doing move.`);\n    return;\n  }\n\n  const connections = rotateConnections(PIECE_TYPES[type].connections, rotation);\n\n  if (currentStage === GAME_STAGE.STATIONS.type) {\n    // console.log(currentStage);\n    if (!isLegalStationPlacement(posX, posY, rows, columns, connections)) return;\n\n    const adjacentSquares = getAdjacentSquares(posX, posY, rows, columns, 2);\n    console.log(adjacentSquares);\n    adjacentSquares.map(square => {\n      dispatch(disablePiece(...square));\n    });\n  }\n\n  const piece = {\n    connections,\n    enabled: true,\n    occupied: true,\n    ownerId: id,\n    posX,\n    posY,\n    type,\n    rotation\n  };\n  dispatch(savePiece(posX, posY, piece));\n  dispatch(playerMakeMove());\n};\n\nexport const showLegalMoves = () => (dispatch, getState) => {\n  const {\n    board: { gameMap },\n    game: {\n      activeTurn: {\n        player: { id }\n      },\n      turns: {\n        stage: { type: stageType }\n      }\n    }\n  } = getState();\n\n  if (stageType !== GAME_STAGE.TRACKS.type) return;\n\n  const legalMoves = getLegalMoves(gameMap, id);\n  const parsedMoves = legalMoves.map(el => el.join());\n  console.log(legalMoves);\n  console.log(legalMoves.map(el => el.join()));\n  if (parsedMoves.length) dispatch(setLegalMoves(parsedMoves));\n};\n","export const SET_BOARD = 'SET_BOARD';\nexport const SET_COLUMNS = 'SET_COLUMNS';\nexport const SET_ROWS = 'SET_ROWS';\nexport const SET_PIECE = 'SET_PIECE';\nexport const ENABLE_PIECE = 'ENABLE_PIECE';\nexport const SET_LEGAL_MOVES = 'SET_LEGAL_MOVES';\nexport const DISABLE_PIECE = 'DISABLE_PIECE';\nexport const ENABLE_ALL_PIECES = 'ENABLE_ALL_PIECES';\n","import linePiece from 'images/pieces/line.svg';\nimport curvePiece from 'images/pieces/curve.svg';\nimport bridgePiece from 'images/pieces/bridge.svg';\nimport switchPiece from 'images/pieces/switch.svg';\nimport forestPiece from 'images/pieces/padure.svg';\nimport stationPiece from 'images/pieces/gara.svg';\n\nexport const PIECES = {\n  line: linePiece,\n  curve: curvePiece,\n  bridge: bridgePiece,\n  switch: switchPiece,\n  forest: forestPiece,\n  station: stationPiece\n};\n\nexport default PIECES;\n","import React from 'react';\n\nimport PIECES from 'constants/assetsMap';\nimport { GAME_STAGE } from 'constants/game';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nexport const SelectionWheel = ({\n  allowRotate,\n  internalType,\n  internalRotate,\n  hideWheel,\n  setSelection,\n  saveSelection,\n  setRotation,\n  stage\n}) => (\n  <div className={'selection-wheel'}>\n    {Object.keys(PIECES)\n      .filter(piece => GAME_STAGE[stage].piece.includes(piece))\n      .map((key, idx) => {\n        return (\n          <div key={idx} className={`quadrant quadrant-${idx}`} onClick={() => setSelection(key)}>\n            <img src={PIECES[key]} />\n          </div>\n        );\n      })}\n    <div className={'selection-preview'} onClick={() => saveSelection()}>\n      {internalType && <img className={`rotate-${internalRotate}`} src={PIECES[internalType]} />}\n    </div>\n    {allowRotate && (\n      <>\n        <div className={'selection-rotate-right'} onClick={() => setRotation(90)}>\n          <FontAwesomeIcon icon={faUndo} />\n        </div>\n        <div className={'selection-rotate-left'} onClick={() => setRotation(-90)}>\n          <FontAwesomeIcon icon={faUndo} />\n        </div>\n      </>\n    )}\n    <div className={'selection-close'} onClick={() => hideWheel()}>\n      <FontAwesomeIcon icon={faTimes} />\n    </div>\n  </div>\n);\n","import React, { useEffect, useReducer } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { SelectionWheel } from 'components/SelectionWheel';\n\nimport PIECES from 'constants/assetsMap';\nimport { PIECE_TYPES } from 'constants/pieces';\nimport { GAME_STAGE } from 'constants/game';\n\nconst actionTypes = {\n  SET_ALLOW_ROTATE: 'SET_ALLOW_ROTATE',\n  SET_TYPE: 'SET_TYPE',\n  SET_ROTATE: 'SET_ROTATE',\n  SET_DISABLED: 'SET_DISABLED',\n  SET_ENABLED: 'SET_ENABLED',\n  SHOW_SELECTION_WHEEL: 'SHOW_SELECTION_WHEEL',\n  HIDE_SELECTION_WHEEL: 'HIDE_SELECTION_WHEEL'\n};\n\nconst reducer = (state, action) => {\n  console.log(`${action.type} called with payload: ${action.payload}`);\n  switch (action.type) {\n    case actionTypes.SET_ALLOW_ROTATE:\n      return { ...state, allowRotate: action.payload };\n    case actionTypes.SET_TYPE:\n      return { ...state, internalType: action.payload };\n    case actionTypes.SET_ROTATE:\n      return { ...state, internalRotate: action.payload };\n    case actionTypes.SET_ENABLED:\n      return { ...state, isEnabled: true };\n    case actionTypes.SET_DISABLED:\n      return { ...state, isEnabled: false };\n    case actionTypes.SHOW_SELECTION_WHEEL:\n      return { ...state, selectionWheel: true };\n    case actionTypes.HIDE_SELECTION_WHEEL:\n      return { ...state, selectionWheel: false };\n  }\n};\n\nconst Piece = ({ cornerPiece, enabled, rotation, type, stage, posX, posY, setPiece }) => {\n  const [\n    { allowRotate, internalType, internalRotate, isEnabled, selectionWheel },\n    dispatch\n  ] = useReducer(reducer, {\n    allowRotate: false,\n    internalType: type,\n    internalRotate: rotation ? rotation : 0,\n    isEnabled: true,\n    selectionWheel: false\n  });\n\n  useEffect(() => {\n    if (cornerPiece === true && GAME_STAGE[stage] === GAME_STAGE.STATIONS)\n      dispatch({ type: actionTypes.SET_DISABLED });\n  }, [stage]);\n\n  const showWheel = () => (isEnabled ? dispatch({ type: actionTypes.SHOW_SELECTION_WHEEL }) : null);\n\n  const hideWheel = () => dispatch({ type: actionTypes.HIDE_SELECTION_WHEEL });\n\n  const setSelection = type => {\n    dispatch({ type: actionTypes.SET_TYPE, payload: type });\n    dispatch({ type: actionTypes.SET_ALLOW_ROTATE, payload: PIECE_TYPES[type].allowRotate });\n  };\n\n  const saveSelection = () => {\n    hideWheel();\n    setPiece(posX, posY, internalType, internalRotate);\n  };\n\n  const setRotation = rotation => {\n    dispatch({\n      type: actionTypes.SET_ROTATE,\n      payload: Math.abs(internalRotate + rotation) === 360 ? 0 : internalRotate + rotation\n    });\n  };\n\n  return (\n    <div\n      className={`piece piece-${type} ${enabled ? 'enabled' : 'disabled'} ${\n        selectionWheel ? 'show-wheel' : ''\n      }`}\n    >\n      <SelectionWheel\n        allowRotate={allowRotate}\n        hideWheel={hideWheel}\n        internalType={internalType}\n        internalRotate={internalRotate}\n        setSelection={setSelection}\n        saveSelection={saveSelection}\n        setRotation={setRotation}\n        stage={stage}\n      />\n      <div className={'piece-image'} onClick={() => showWheel()}>\n        {type && <img className={`rotate-${rotation}`} src={PIECES[type]} />}\n      </div>\n    </div>\n  );\n};\n\nPiece.propTypes = {\n  cornerPiece: PropTypes.bool.isRequired,\n  enabled: PropTypes.bool.isRequired,\n  rotation: PropTypes.number.isRequired,\n  type: PropTypes.oneOf([...Object.keys(PIECE_TYPES), '']).isRequired,\n  stage: PropTypes.oneOf([...Object.keys(GAME_STAGE), '']).isRequired,\n  posX: PropTypes.number.isRequired,\n  posY: PropTypes.number.isRequired,\n  setPiece: PropTypes.func.isRequired\n};\n\nexport default Piece;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { initBoard, setPiece } from 'store/actions/board';\nimport { initPlayers, playerMakeMove } from 'store/actions/game';\nimport Piece from 'components/Piece';\n\nconst Board = ({ board, rows, columns, stage, setPiece, initBoard, initPlayers }) => {\n  useEffect(() => {\n    initBoard();\n    initPlayers();\n  }, []);\n\n  return (\n    <div className={'game-board'} style={{ width: `calc(80px * ${columns})` }}>\n      {board.map((row, i) =>\n        row.map((cell, j) => {\n          const isCornerPiece =\n            (i == 0 && j == 0) ||\n            (i == rows - 1 && j == columns - 1) ||\n            (i == 0 && j == columns - 1) ||\n            (i == rows - 1 && j == 0);\n          return (\n            <div\n              className={`cell \n                ${j === columns - 1 ? 'right-edge' : ''} \n                ${i === rows - 1 ? 'bottom-edge' : ''}`}\n              style={{ flex: `calc(100% / ${columns} - 1px) 0 0` }}\n              key={`cell-${i}${j}`}\n            >\n              <Piece\n                cornerPiece={isCornerPiece}\n                posX={i}\n                posY={j}\n                setPiece={setPiece}\n                stage={stage}\n                {...cell}\n              />\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  board: state.board.gameMap,\n  stage: state.game.turns.stage.type\n});\n\nconst mapDispatchToProps = { initBoard, initPlayers, setPiece, playerMakeMove };\n\nBoard.propTypes = {\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  board: PropTypes.array,\n  initBoard: PropTypes.func,\n  initPlayers: PropTypes.func,\n  setPiece: PropTypes.func,\n  stage: PropTypes.object\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setColumns, setRows } from 'store/actions/board';\nimport Board from 'views/Board';\n\nfunction App({ rows, columns, setRows, setColumns, stage, activePlayer }) {\n  return (\n    <div className=\"App\">\n      <div className={'controls'}>\n        <label>{'Rows:'}</label>\n        <input\n          type={'number'}\n          pattern={'[0-9]*'}\n          value={rows}\n          onChange={e => setRows(e.target.value)}\n        />\n        <br />\n        <label>{'Columns:'}</label>\n        <input\n          type={'number'}\n          pattern={'[0-9]*'}\n          value={columns}\n          onChange={e => setColumns(e.target.value)}\n        />\n        <br/>\n        <h3>Stage: {stage}</h3>\n        {activePlayer.player.name} make {activePlayer.moves.allowed - activePlayer.moves.executed} moves\n      </div>\n      <Board rows={rows} columns={columns} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  rows: state.board.config.rows,\n  columns: state.board.config.columns,\n  stage: state.game.turns.stage.type,\n  activePlayer: state.game.activeTurn\n});\n\nconst mapDispatchToProps = {\n  setRows,\n  setColumns\n};\n\nApp.propTypes = {\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  setRows: PropTypes.func,\n  setColumns: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  SET_BOARD,\n  SET_COLUMNS,\n  SET_ROWS,\n  SET_PIECE,\n  ENABLE_PIECE,\n  DISABLE_PIECE,\n  SET_LEGAL_MOVES,\n  ENABLE_ALL_PIECES\n} from 'store/types/board';\n\nexport const initialState = {\n  config: {\n    rows: 8,\n    columns: 8\n  },\n  gameMap: []\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BOARD:\n      return { ...state, gameMap: action.payload };\n\n    case SET_ROWS:\n      return { ...state, config: { ...state.config, rows: action.payload } };\n\n    case SET_COLUMNS:\n      return { ...state, config: { ...state.config, columns: action.payload } };\n\n    case SET_PIECE:\n      return {\n        ...state,\n        gameMap: Object.assign([...state.gameMap], {\n          [action.payload.x]: Object.assign([...state.gameMap[action.payload.x]], {\n            [action.payload.y]: {\n              ...action.payload.piece\n            }\n          })\n        })\n      };\n\n    case ENABLE_PIECE:\n      return {\n        ...state,\n        gameMap: Object.assign([...state.gameMap], {\n          [action.payload.x]: Object.assign([...state.gameMap[action.payload.x]], {\n            [action.payload.y]: {\n              ...state.gameMap[action.payload.x][action.payload.y],\n              enabled: true\n            }\n          })\n        })\n      };\n\n    case DISABLE_PIECE:\n      return {\n        ...state,\n        gameMap: Object.assign([...state.gameMap], {\n          [action.payload.x]: Object.assign([...state.gameMap[action.payload.x]], {\n            [action.payload.y]: {\n              ...state.gameMap[action.payload.x][action.payload.y],\n              enabled: false\n            }\n          })\n        })\n      };\n\n    case SET_LEGAL_MOVES: {\n      return {\n        ...state,\n        gameMap: state.gameMap.map((rows, posX) =>\n          rows.map((cell, posY) =>\n            action.payload.moves.includes(`${posX},${posY}`)\n              ? { ...cell, enabled: true }\n              : { ...cell, enabled: false }\n          )\n        )\n      };\n    }\n\n    case ENABLE_ALL_PIECES: {\n      return {\n        ...state,\n        gameMap: state.gameMap.map(rows => rows.map(cell => ({ ...cell, enabled: true })))\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  INIT_PLAYERS,\n  SET_PLAYER_COUNT,\n  SET_PLAYERS,\n  SET_TURN,\n  SET_GAME_STAGE,\n  SET_ACTIVE_PLAYER,\n  PLAYER_MOVE_ADD\n} from 'store/types/game';\n\nexport const initialState = {\n  playerCount: 2,\n  players: {},\n  turns: {\n    count: 1,\n    stage: ''\n  },\n  activeTurn: {\n    player: {},\n    moves: {\n      allowed: 0,\n      executed: 0\n    }\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_PLAYERS:\n      return { ...state, players: { ...action.payload } };\n    case SET_TURN:\n      return { ...state, turns: { ...state.turns, active: action.payload } };\n    case SET_PLAYER_COUNT:\n      return { ...state, playerCount: action.payload };\n    case SET_PLAYERS:\n      return { ...state, players: action.payload };\n    case SET_GAME_STAGE:\n      return { ...state, turns: { ...state.turns, stage: action.payload } };\n    case SET_ACTIVE_PLAYER:\n      return { ...state, activeTurn: action.payload };\n    case PLAYER_MOVE_ADD:\n      return {\n        ...state,\n        activeTurn: {\n          ...state.activeTurn,\n          moves: { ...state.activeTurn.moves, executed: state.activeTurn.moves.executed + 1 }\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport boardReducer from './board';\nimport gameReducer from './game';\n\nexport const reducers = combineReducers({\n  board: boardReducer,\n  game: gameReducer\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\n// dev tool\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'views/App';\nimport { Provider } from 'react-redux';\nimport 'styles/global.scss';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}