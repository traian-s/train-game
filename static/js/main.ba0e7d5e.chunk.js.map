{"version":3,"sources":["views/Board.jsx","views/App.jsx","store/actions/ui.js","store/types/ui.js","store/reducers/ui.js","store/reducers/index.js","store/index.js","index.js"],"names":["Board","props","this","rows","columns","className","style","width","Array","parseInt","map","_","i","j","flex","key","Component","mapDispatchToProps","setRows","type","payload","setColumns","connect","state","ui","board","pattern","value","onChange","e","target","initialState","reducers","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"qQA8BeA,E,kDA3Bb,WAAYC,GAAQ,uCACZA,G,qDAEE,IAAD,EAGHC,KADFD,MAASE,EAFJ,EAEIA,KAAMC,EAFV,EAEUA,QAEjB,OACE,yBAAKC,UAAW,aAAcC,MAAO,CAAEC,MAAM,eAAD,OAAiBH,EAAjB,OACzC,YAAII,MAAMC,SAASN,KAAQO,KAAI,SAACC,EAAGC,GAClC,OAAO,YAAIJ,MAAMC,SAASL,KAAWM,KAAI,SAACC,EAAGE,GAC3C,OACE,yBACER,UAAS,iCACPQ,IAAMT,EAAU,EAAI,aAAe,GAD5B,8BAEPQ,IAAMT,EAAO,EAAI,cAAgB,IACnCG,MAAO,CAAEQ,KAAK,eAAD,OAAiBV,EAAjB,gBACbW,IAAG,eAAUH,GAAV,OAAcC,gB,GAlBbG,aC4BpB,IAKMC,EAAqB,CACzBC,QClCqB,SAAAf,GAAI,MAAK,CAAEgB,KCFV,WDE0BC,QAASjB,IDmCzDkB,WClCwB,SAAAjB,GAAO,MAAK,CAAEe,KCFb,cDEgCC,QAAShB,KDqCrDkB,eAVS,SAAAC,GAAK,MAAK,CAChCpB,KAAMoB,EAAMC,GAAGC,MAAMtB,KACrBC,QAASmB,EAAMC,GAAGC,MAAMrB,WAQca,EAAzBK,EAnCf,YAAsD,IAAvCnB,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASc,EAAuB,EAAvBA,QAASG,EAAc,EAAdA,WACrC,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAW,YACd,+BAAQ,SACR,2BACEc,KAAM,SACNO,QAAS,SACTC,MAAOxB,EACPyB,SAAU,SAAAC,GAAC,OAAIX,EAAQW,EAAEC,OAAOH,UAElC,6BACA,+BAAQ,YACR,2BACER,KAAM,SACNO,QAAS,SACTC,MAAOvB,EACPwB,SAAU,SAAAC,GAAC,OAAIR,EAAWQ,EAAEC,OAAOH,WAGvC,kBAAC,EAAD,CAAOxB,KAAMA,EAAMC,QAASA,Q,8BGvBrB2B,EAAe,CAC1BN,MAAO,CACLtB,KAAM,EACNC,QAAS,ICFA4B,EAAWC,YAAgB,CACtCT,GDKa,WAAmC,IAAlCD,EAAiC,uDAAzBQ,EAAcG,EAAW,uCAC/C,OAAQA,EAAOf,MACb,IDXoB,WCYlB,OAAO,eAAKI,EAAZ,CAAmBE,MAAM,eAAMF,EAAME,MAAb,CAAoBtB,KAAM+B,EAAOd,YAE3D,IDbuB,cCcrB,OAAO,eAAKG,EAAZ,CAAmBE,MAAM,eAAMF,EAAME,MAAb,CAAoBrB,QAAS8B,EAAOd,YAE9D,QACE,OAAOG,MEbPY,EAAmBC,OAAOC,sCAAwCC,IAEzDC,cAAYP,EAAUG,EAAiBK,YAAgBC,OCCtEC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ba0e7d5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    const {\n      props: { rows, columns }\n    } = this;\n    return (\n      <div className={'game-board'} style={{ width: `calc(80px * ${columns})` }}>\n        {[...Array(parseInt(rows))].map((_, i) => {\n          return [...Array(parseInt(columns))].map((_, j) => {\n            return (\n              <div\n                className={`cell \n                ${j === columns - 1 ? 'right-edge' : ''} \n                ${i === rows - 1 ? 'bottom-edge' : ''}`}\n                style={{ flex: `calc(100% / ${columns} - 1px) 0 0` }}\n                key={`cell-${i}${j}`}\n              ></div>\n            );\n          });\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setColumns, setRows } from 'store/actions/ui';\nimport Board from 'views/Board';\n\nfunction App({ rows, columns, setRows, setColumns }) {\n  return (\n    <div className=\"App\">\n      <div className={'controls'}>\n        <label>{'Rows:'}</label>\n        <input\n          type={'number'}\n          pattern={'[0-9]*'}\n          value={rows}\n          onChange={e => setRows(e.target.value)}\n        />\n        <br />\n        <label>{'Columns:'}</label>\n        <input\n          type={'number'}\n          pattern={'[0-9]*'}\n          value={columns}\n          onChange={e => setColumns(e.target.value)}\n        />\n      </div>\n      <Board rows={rows} columns={columns} />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  rows: state.ui.board.rows,\n  columns: state.ui.board.columns\n});\n\nconst mapDispatchToProps = {\n  setRows,\n  setColumns\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { SET_ROWS, SET_COLUMNS } from 'store/types/ui';\n\nexport const setRows = rows => ({ type: SET_ROWS, payload: rows });\nexport const setColumns = columns => ({ type: SET_COLUMNS, payload: columns });\n","export const SET_ROWS = 'SET_ROWS';\nexport const SET_COLUMNS = 'SET_COLUMNS';\n","import { SET_ROWS, SET_COLUMNS } from 'store/types/ui';\n\nexport const initialState = {\n  board: {\n    rows: 8,\n    columns: 8\n  }\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ROWS:\n      return { ...state, board: { ...state.board, rows: action.payload } };\n\n    case SET_COLUMNS:\n      return { ...state, board: { ...state.board, columns: action.payload } };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport uiReducer from './ui';\n\nexport const reducers = combineReducers({\n  ui: uiReducer\n});\n","import { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducers } from './reducers';\n\n// dev tool\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'views/App';\nimport { Provider } from 'react-redux';\nimport 'styles/global.scss';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}